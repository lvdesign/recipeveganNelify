{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/animations/app.animation.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app-routing/routes.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.scss","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/directives/highlight.directive.ts","webpack:///./src/app/favorites/favorites.component.html","webpack:///./src/app/favorites/favorites.component.scss","webpack:///./src/app/favorites/favorites.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/instag/instag.component.html","webpack:///./src/app/instag/instag.component.scss","webpack:///./src/app/instag/instag.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/recipe/recipe.component.html","webpack:///./src/app/recipe/recipe.component.scss","webpack:///./src/app/recipe/recipe.component.ts","webpack:///./src/app/recipedetail/recipedetail.component.html","webpack:///./src/app/recipedetail/recipedetail.component.scss","webpack:///./src/app/recipedetail/recipedetail.component.ts","webpack:///./src/app/recipestore/recipestore.component.html","webpack:///./src/app/recipestore/recipestore.component.scss","webpack:///./src/app/recipestore/recipestore.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.interceptor.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/favorite.service.ts","webpack:///./src/app/services/feedback.service.ts","webpack:///./src/app/services/process-httpmsg.service.ts","webpack:///./src/app/services/recipe.service.ts","webpack:///./src/app/shared/baseurl.ts","webpack:///./src/app/shared/feedback.ts","webpack:///./src/app/shared/recipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <!-- premier bandeau-->\\n          <div class=\\\"row\\\">\\n                <div class=\\\"card-panel green lighten-1 \\\">\\n\\n                        <div class=\\\"row valign-wrapper\\\">\\n                                <div class=\\\"col s3 \\\">\\n                                  <img src=\\\"assets/images/tianCourgettes.png\\\" alt=\\\"VOS ENFANTS APPRENENT À CODER\\\" class=\\\"circle responsive-img z-depth-3\\\"> <!-- notice the \\\"circle\\\" class -->\\n                                </div>\\n                                <div class=\\\"col s9\\\">\\n                                  <span class=\\\"white-text\\\">\\n                                        <h4>ET SI POUR LES VACANCES, <br/>VOS ENFANTS APPRENAIENT À CODER ?</h4>\\n                                        <p>Avec Magic Makers les vacances sont funs et créatives ! Découverte des nouvelles technologies et langages, inventions en tout genres, les enfants et ados deviennent acteurs du monde de demain.\\n\\n                                        <br /><b>test</b>\\n                                    </p>\\n                                  </span>\\n                                  <a class=\\\"waves-effect waves-light btn-large deep-purple accent-2\\\">Et encore d'autres stages…</a>\\n                                </div>\\n                        </div>\\n                </div>\\n          </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\"\\n  fxLayout=\\\"column\\\"\\n  fxLayoutGap=\\\"10px\\\">\\n\\n  <div fxFlex>\\n    <div>\\n        <h3>Admin</h3>\\n        <hr>\\n    </div>\\n\\n  </div>\\n\\n\\n    <div fxFlex>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n\\n            <div fxFlex=\\\"50\\\"  class=\\\"form-size\\\">\\n\\n                <div class=\\\"example-container\\\">\\n                   \\n                        <h3>Send us your Recipe </h3>\\n                        <p>{{ recipeForm.value | json }} {{ recipeForm.status | json }}</p>\\n                   \\n                    \\n                      <form novalidate [formGroup]=\\\"recipeForm\\\" #adminform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                                                       \\n                        <mat-form-field class=\\\"half-width\\\">\\n                                  <input matInput formControlName=\\\"title\\\" placeholder=\\\"Title\\\" type=\\\"text\\\" required>\\n                                  <mat-error *ngIf=\\\"formErrors.title\\\">{{formErrors.title}}</mat-error>\\n                                </mat-form-field>\\n                         \\n                        <mat-form-field class=\\\"half-width\\\">\\n                                <mat-select placeholder=\\\"Category\\\" formControlName=\\\"category\\\">\\n                                <mat-option *ngFor=\\\"let ctype of categoriesTypes\\\" [value]=\\\"ctype\\\">\\n                                        {{ ctype }}\\n                                      </mat-option>\\n                                    </mat-select>\\n                                     </mat-form-field>\\n                            \\n\\n                              \\n                                <mat-form-field class=\\\"full-width\\\">\\n                                  <textarea matInput formControlName=\\\"summary\\\" placeholder=\\\"Summary\\\" rows=5 required></textarea>\\n                                   <mat-error *ngIf=\\\"formErrors.title\\\">{{formErrors.summary}}</mat-error>\\n\\n                                </mat-form-field>\\n                              \\n\\n                            \\n                                <mat-form-field class=\\\"full-width\\\">\\n                                  <textarea matInput formControlName=\\\"ingredients\\\" placeholder=\\\"Ingredients\\\" rows=5 required></textarea>\\n\\n                                </mat-form-field>\\n                             \\n\\n                            \\n                                <mat-form-field class=\\\"full-width\\\">\\n                                  <input matInput type=\\\"number\\\" formControlName=\\\"preparationTime\\\" placeholder=\\\"Preparation Time\\\" required>\\n\\n                                </mat-form-field>\\n                             \\n\\n                             \\n                                <mat-form-field class=\\\"full-width\\\">\\n                                  <input matInput type=\\\"number\\\" formControlName=\\\"cookingTime\\\" placeholder=\\\"Cooking Time\\\" required>\\n                                </mat-form-field>\\n                             \\n\\n                             \\n                                <mat-form-field class=\\\"full-width\\\">\\n                                  <textarea matInput formControlName=\\\"method\\\" placeholder=\\\"Method\\\" rows=5 required></textarea>\\n                                </mat-form-field>\\n                             \\n                                                           \\n\\n                           \\n\\n                              <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\n                              [disabled]=\\\"recipeForm.invalid\\\">Submit</button>\\n\\n                            </form>\\n                \\n                \\n            </div>\\n\\n\\n            <div fxFlex=\\\"40\\\" fxFlexOffset=\\\"20px\\\" *ngIf=\\\"recipes\\\">\\n              <mat-list-item *ngFor=\\\"let recipe of recipes\\\">\\n                    <h2  matLine >{{ recipe.title}}   </h2>\\n                    <p  matLine >{{ recipe.category }}</p>\\n                    <p  matLine >-- {{ recipe.summary }} </p>\\n                    <button (click)=\\\"onUpdateRecipe(this.recipe.id)\\\">Update</button>\\n                    <button (click)=\\\"onRemoveRecipe(this.recipe.id)\\\">Delete</button>\\n              </mat-list-item>\\n              </div>\\n            </div>\\n    </div>\\n  <!-- def Recipe\\n\\n  https://material.angular.io/components/form-field/overview\\n     id: string; // _id string with Mongo\\n    author: string; // USER\\n    title: string;\\n    image: string;\\n    category: string;\\n    summary: string;\\n    method: string;\\n    ingredients: string;\\n    preparationTime: string;\\n    cookingTime: string;\\n    tips: string;\\n    featured: boolean;\\n    date: string;\\n    comments: Comment[];\\n  -->\\n    <div fxFlex [hidden]=\\\"recipes || errMess\\\">\\n        <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n      </div>\\n\\n      <div fxFlex *ngIf=\\\"errMess\\\">\\n        <h2>Error</h2>\\n        <h4>{{errMess}}</h4>\\n      </div>\\n\\n</div>\\n\"","module.exports = \".full-width {\\n  width: 95%; }\\n\\n.half-width {\\n  width: 45%; }\\n\\n.form-size {\\n  width: 75%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sYXVyZW50dmlnbmF1eC9Eb2N1bWVudHMvYml0YnV0VmVnYW4vTmV3UmVjaXBlQW5ndWxhci9zcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFDRixFQUFBOztBQUVBO0VBQ0UsVUFDRixFQUFBOztBQUVBO0VBQ0UsVUFDRixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vYWRtaW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XG4gIHdpZHRoOiA5NSVcbn1cblxuLmhhbGYtd2lkdGgge1xuICB3aWR0aDogNDUlXG59XG5cbi5mb3JtLXNpemUge1xuICB3aWR0aDogNzUlXG59XG4iXX0= */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\n\nimport { Recipe, Categories } from '../shared/recipe';\nimport { Comment } from '../shared/comment';\nimport { RecipeService } from '../services/recipe.service';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  @ViewChild('adminform') recipeFormDirective;\n\n  recipeForm: FormGroup;\n\n  recipes: Recipe[];\n  recipe: Recipe;\n  recipeCopy: Recipe;\n\n  categoriesTypes = Categories;\n\n  comments: Comment[];\n\n  errMess: string;\n\n  formErrors = {\n    title: '',\n    category: 'none',\n    summary: '',\n    method: '',\n    ingredients: '',\n    preparationTime: '',\n    cookingTime: '',\n    featured: ''\n  };\n\n  validationMessages = {\n\n    title: {\n        required: 'Title Name is required.',\n        minlength: 'Title Name must be at least 2 characters long.',\n        maxlength: 'Title cannot be more than 25 characters long.',\n      },\n          summary: {\n        required: 'Summary is required.',\n        minlength: 'Title Name must be at least 2 characters long.',\n        maxlength: 'Title cannot be more than 25 characters long.',\n      }\n  };\n\n/*\n   id: string; // _id string with Mongo\n      author: string; // USER\n      title: string;\n      image: string;\n      category: string;\n      summary: string;\n      method: string;\n      ingredients: string;\n      preparationTime: string;\n      cookingTime: string;\n      tips: string;\n      featured: boolean;\n      date: string;\n      comments: Comment[];\n */\n\n  constructor(\n      private recipeService: RecipeService\n    , private fb: FormBuilder\n    , @Inject('BaseURL') private BaseURL\n\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.recipeService.getRecipes()\n    .subscribe( recipes => this.recipes = recipes, errmess => this.errMess = errmess as any );\n  }\n\n  onRemoveRecipe( id: string ) {\n    console.log( id );\n    this.recipeService.deleteRecipe(id).subscribe(\n      res => {  console.log('Deleted'); } , errmess => this.errMess = errmess as any );\n  }\n\n  onUpdateRecipe( id: string ) {\n    console.log( id );\n  }\n\n\n  // FORM\n  createForm() {\n    this.recipeForm = this.fb.group({\n      title: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)] ],\n      image: '',\n      category: ['none', [Validators.required]],\n      preparationTime: [0, [Validators.required, Validators.pattern] ],\n      cookingTime: [0, [Validators.required, Validators.pattern] ],\n      ingredients: ['', [Validators.required]],\n      method: ['', [Validators.required]],\n      featured: false,\n      comments: this.fb.array([]),\n    });\n\n    this.recipeForm.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n  // controle validation form\n  onValueChanged(data?: any) {\n    if (!this.recipeForm) { return; }\n    const form = this.recipeForm;\n// general\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\nonSubmit() {\n  this.recipe = this.recipeFormDirective.value;\n  this.recipe.date = new Date().toISOString();\n  this.recipeService.addRecipe(this.recipe)\n    .subscribe ( recipe => { this.recipe = recipe; }, errmess => { this.recipe = null; this.errMess = errmess as any; });\n\n\n  this.recipeFormDirective.resetForm();\n\n  this.recipeForm.reset({\n    // author: string; // USER\n    title: '',\n    image: '',\n    category: '',\n    summary: '',\n    method: '',\n    ingredients: '',\n    preparationTime: '',\n    cookingTime: '',\n    tips: '',\n    featured: false,   \n    comments: []\n  });\n\n}\n\n} // endClass\n\n\n","import { trigger, state, style, animate, transition } from '@angular/animations';\n\nexport function visibility() {\n    return trigger('visibility', [\n        state('shown', style({\n            transform: 'scale(1.0)',\n            opacity: 1\n        })),\n        state('hidden', style({\n            transform: 'scale(0.5)',\n            opacity: 0\n        })),\n        transition('* => *', animate('0.5s ease-in-out'))\n    ]);\n}\nexport function flyInOut() {\n    return trigger('flyInOut', [\n        state('*', style({ opacity: 1, transform: 'translateX(0)'})),\n        transition(':enter', [\n            style({ transform: 'translateX(-100%)', opacity: 0 }),\n            animate('500ms ease-in')\n        ]),\n        transition(':leave', [\n            animate('500ms ease-out', style({ transform: 'translateX(100%)', opacity: 0}))\n        ])\n    ]);\n}\n\nexport function expand() {\n    return trigger('expand', [\n        state('*', style({ opacity: 1, transform: 'translateX(0)' })),\n        transition(':enter', [\n            style({ transform: 'translateY(-50%)', opacity: 0 }),\n            animate('200ms ease-in', style({ opacity: 1, transform: 'translateX(0)' }))\n        ])\n    ]);\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport {routes} from './routes';\n@NgModule({\n  declarations: [],\n  exports: [\n    RouterModule\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ]\n})\nexport class AppRoutingModule { }\n","import { Routes } from '@angular/router';\n\nimport { RecipeComponent } from '../recipe/recipe.component';\nimport { RecipedetailComponent } from '../recipedetail/recipedetail.component';\nimport { HomeComponent } from '../home/home.component';\nimport { AboutComponent } from '../about/about.component';\nimport { ContactComponent } from '../contact/contact.component';\nimport { AdminComponent } from '../admin/admin.component';\nimport { InstagComponent} from '../instag/instag.component';\nimport { RecipestoreComponent } from '../recipestore/recipestore.component';\n\nexport const routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'recipe', component: RecipeComponent },\n  { path: 'recipedetail/:id', component: RecipedetailComponent },\n  { path: 'contactus', component: ContactComponent},\n  { path: 'aboutus', component: AboutComponent},\n  { path: 'instag', component: InstagComponent},\n  { path: 'recipestore', component: RecipestoreComponent},\n  { path: 'admin', component: AdminComponent },\n\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\n];\n","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'vegan-recipes';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport 'hammerjs';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n// Form\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { LayoutModule } from '@angular/cdk/layout';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\nimport { ContactComponent } from './contact/contact.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { RecipeComponent } from './recipe/recipe.component';\nimport { RecipedetailComponent } from './recipedetail/recipedetail.component';\nimport { InstagComponent } from './instag/instag.component';\nimport { RecipestoreComponent } from './recipestore/recipestore.component';\n\nimport { AdminComponent } from './admin/admin.component';\n\nimport { ProcessHTTPMsgService } from './services/process-httpmsg.service';\nimport { RecipeService } from './services/recipe.service';\nimport { FeedbackService } from './services/feedback.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthInterceptor, UnauthorizedInterceptor } from './services/auth.interceptor';\nimport { FavoriteService } from './services/favorite.service';\nimport { AuthGuardService } from './services/auth-guard.service';\n\n\nimport { AppRoutingModule} from './app-routing/app-routing.module';\nimport { baseURL } from './shared/baseurl';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { HighlightDirective } from './directives/highlight.directive';\n\nimport { AgmCoreModule } from '@agm/core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    AboutComponent,\n    HomeComponent,\n    ContactComponent,\n    LoginComponent,\n    AdminComponent,\n    RecipeComponent,\n    RecipedetailComponent,\n    InstagComponent,\n    RecipestoreComponent,\n    FavoritesComponent,\n    HighlightDirective,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    LayoutModule,\n    AgmCoreModule.forRoot({ // AIzaSyClJdyLeLSZUwBMQRbrDM1xtFXYJeZG86A\n      apiKey: 'AIzaSyABZXnDwcH8m6OMo37xyVIvIVGR7ai7_rs'\n    })\n  ],\n  providers: [\n    RecipeService,\n    ProcessHTTPMsgService,\n    { provide: 'BaseURL', useValue: baseURL },\n    FeedbackService,\n    AuthService,\n    AuthGuardService,\n    FavoriteService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UnauthorizedInterceptor,\n      multi: true\n    }\n  ],\n  entryComponents: [\n    LoginComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\"\\n  fxLayout=\\\"column\\\"\\n  fxLayoutGap=\\\"10px\\\">\\n\\n  <div fxFlex>\\n    <div>\\n        <h3>Contact Us</h3>\\n        <hr>\\n    </div>\\n  </div>\\n\\n  <div fxFlex>\\n    <h3>Location Information</h3>\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n\\n      <div fxFlex=\\\"50\\\" fxFlexOffset=\\\"20px\\\">\\n        <h4>Our Address</h4>\\n        <address>\\n          121, Clear Water Bay Road<br>\\n          Clear Water Bay, Kowloon<br>\\n          HONG KONG<br>\\n          <i class=\\\"fa fa-phone\\\"></i>: +852 1234 5678<br>\\n          <i class=\\\"fa fa-fax\\\"></i>: +852 8765 4321<br>\\n          <i class=\\\"fa fa-envelope\\\"></i>:\\n                <a href=\\\"mailto:confusion@food.net\\\">confusion@food.net</a>\\n        </address>\\n        <p></p>\\n        <div>\\n          <a mat-raised-button href=\\\"tel:+85212345678\\\"><i class=\\\"fa fa-phone\\\"></i> Call</a>\\n          <a mat-raised-button><i class=\\\"fa fa-skype\\\"></i> Skype</a>\\n          <a mat-raised-button href=\\\"mailto:confusion@food.net\\\"><i class=\\\"fa fa-envelope-o\\\"></i> Email</a>\\n        </div>\\n        </div>\\n\\n      <div fxFlex=\\\"40\\\" *ngIf=\\\"feedbacks\\\">\\n        <h4>Feedback</h4>\\n        <mat-list-item *ngFor=\\\"let feed of feedbacks\\\">\\n          <p  matLine >{{ feed.firstname}} {{ feed.lastname}}  </p>\\n          <p  matLine >{{ feed.message }}</p>\\n          <p  matLine >-- {{ feed.email }}, </p>\\n        </mat-list-item>\\n\\n<!--\\n  firstname: string;\\n  lastname: string;\\n  telnum: number;\\n  email: string;\\n  agree: boolean;\\n  contacttype: string;\\n  message: string;\\n-->\\n      </div>\\n      <div fxFlex [hidden]=\\\"feedbacks || errMess\\\">\\n        <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n      </div>\\n      <div fxFlex *ngIf=\\\"errMess\\\">\\n        <h2>Error Feedback </h2>\\n        <h4>{{errMess}}</h4>\\n      </div>\\n\\n\\n\\n\\n    </div>\\n  </div>\\n\\n  <div fxFlex fxFlexOffset=\\\"20px\\\" class=\\\"form-size\\\">\\n    <h3>Send us your Feedback</h3>\\n\\n    <p>{{ feedbackForm.value | json }} {{ feedbackForm.status | json }}</p>\\n\\n    <form novalidate [formGroup]=\\\"feedbackForm\\\" #fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <p>\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"firstname\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" required>\\n          <mat-error *ngIf=\\\"formErrors.firstname\\\">{{formErrors.firstname}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"lastname\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" required>\\n          <mat-error *ngIf=\\\"formErrors.lastname\\\">{{formErrors.lastname}}</mat-error>\\n        </mat-form-field>\\n      </p>\\n      <p>\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"telnum\\\" placeholder=\\\"Tel. Number\\\" type=\\\"tel\\\" pattern=\\\"[0-9]*\\\" required>\\n          <mat-error *ngIf=\\\"formErrors.telnum\\\">{{formErrors.telnum}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"half-width\\\">\\n          <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" email required>\\n          <mat-error *ngIf=\\\"formErrors.email\\\">{{formErrors.email}}</mat-error>\\n        </mat-form-field>\\n      </p>\\n\\n      <table class=\\\"form-size\\\">\\n        <td>\\n          <mat-slide-toggle formControlName=\\\"agree\\\">May we contact you?</mat-slide-toggle>\\n        </td>\\n        <td>\\n          <mat-select placeholder=\\\"How?\\\" formControlName=\\\"contacttype\\\">\\n            <mat-option *ngFor=\\\"let ctype of contactType\\\" [value]=\\\"ctype\\\">\\n              {{ ctype }}\\n            </mat-option>\\n          </mat-select>\\n        </td>\\n      </table>\\n\\n      <p>\\n        <mat-form-field class=\\\"full-width\\\">\\n          <textarea matInput formControlName=\\\"message\\\" placeholder=\\\"Your Feedback\\\" rows=12></textarea>\\n        </mat-form-field>\\n      </p>\\n\\n      <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\n      [disabled]=\\\"feedbackForm.invalid\\\">Submit</button>\\n\\n    </form>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".full-width {\\n  width: 95%; }\\n\\n.half-width {\\n  width: 45%; }\\n\\n.form-size {\\n  width: 75%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sYXVyZW50dmlnbmF1eC9Eb2N1bWVudHMvYml0YnV0VmVnYW4vTmV3UmVjaXBlQW5ndWxhci9zcmMvYXBwL2NvbnRhY3QvY29udGFjdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQ0YsRUFBQTs7QUFFQTtFQUNFLFVBQ0YsRUFBQTs7QUFFQTtFQUNFLFVBQ0YsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QvY29udGFjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDk1JVxufVxuXG4uaGFsZi13aWR0aCB7XG4gIHdpZHRoOiA0NSVcbn1cblxuLmZvcm0tc2l6ZSB7XG4gIHdpZHRoOiA3NSVcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Feedback, ContactType } from '../shared/feedback';\n\nimport {FeedbackService} from '../services/feedback.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\n\n\nexport class ContactComponent implements OnInit {\n\n  @ViewChild('fform') feedbackFormDirective;\n\n  feedbackForm: FormGroup;\n\n  feedbacks: Feedback[];\n  feedback: Feedback;\n  feedbackCopy: Feedback;\n  contactType = ContactType;\n\n  errMess: string;\n\n  formErrors = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: ''\n  };\n\n  validationMessages = {\n    firstname: {\n      required: 'First Name is required.',\n      minlength: 'First Name must be at least 2 characters long.',\n      maxlength: 'FirstName cannot be more than 25 characters long.'\n    },\n    lastname: {\n      required: 'Last Name is required.',\n      minlength: 'Last Name must be at least 2 characters long.',\n      maxlength: 'Last Name cannot be more than 25 characters long.'\n    },\n    telnum: {\n      required: 'Tel. number is required.',\n      pattern: 'Tel. number must contain only numbers.'\n    },\n    email: {\n      required: 'Email is required.',\n      email: 'Email not in valid format.'\n    },\n  };\n\n\n  constructor(\n      private fb: FormBuilder\n    , private feedbackService: FeedbackService\n    , @Inject('BaseURL') private BaseURL\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n\n    this.feedbackService.getFeedbacks()\n    .subscribe( feedbacks => this.feedbacks = feedbacks, errmess => this.errMess = errmess as any );\n  }\n\n  createForm() {\n    this.feedbackForm = this.fb.group({\n      firstname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)] ],\n      lastname: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)] ],\n      telnum: [0, [Validators.required, Validators.pattern] ],\n      email: ['', [Validators.required, Validators.email] ],\n      agree: false,\n      contacttype: 'None',\n      message: ''\n    });\n\n    this.feedbackForm.valueChanges\n      .subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged();\n\n  }\n// controle validation form\n  onValueChanged(data?: any) {\n    if (!this.feedbackForm) { return; }\n    const form = this.feedbackForm;\n// general\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    this.feedback = this.feedbackForm.value;\n    console.log(this.feedback);\n\n    this.feedbackService.addFeedback(this.feedback)\n    .subscribe( feedback => {this.feedback = feedback; this.feedbackCopy = feedback; },\n      errmess => { this.feedback = null; this.feedbackCopy = null; this.errMess = errmess as any } );\n\n\n    this.feedbackFormDirective.resetForm();\n    this.feedbackForm.reset({\n      firstname: '',\n      lastname: '',\n      telnum: 0,\n      email: '',\n      agree: false,\n      contacttype: 'None',\n      message: ''\n    });\n\n\n  }\n\n\n\n}// endC\n","import { Directive, ElementRef, Renderer2, HostListener  } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2) { }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.renderer.addClass(this.el.nativeElement, 'highlight');\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.renderer.removeClass(this.el.nativeElement, 'highlight');\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\"\\nfxLayout=\\\"column\\\"\\nfxLayoutGap=\\\"10px\\\">\\n\\n<div fxFlex>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"none center\\\">\\n <h3 fxFlex=\\\"80%\\\">My Favorites</h3>\\n <span class=\\\"flex-spacer\\\"></span>\\n <mat-slide-toggle fxFlex\\n [(ngModel)]=\\\"delete\\\"\\n [color]=\\\" \\\">\\n Delete!\\n </mat-slide-toggle>\\n</div>\\n<hr>\\n</div>\\n\\n<div *ngIf=\\\"favorites || errMess; else loading\\\">\\n<div fxFlex *ngIf=\\\"favorites\\\" [@expand]>\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"200px\\\">\\n <mat-grid-tile *ngFor=\\\"let recipe of favorites.recipes\\\">\\n   <div [routerLink]=\\\"['/recipedetail', recipe._id]\\\" appHighlight>\\n   <img height=\\\"200px\\\" src=\\\"{{baseURL + recipe.image}}\\\" alt={{recipe.title}}>\\n   </div>\\n   <mat-grid-tile-footer>\\n     <h1 mat-line>{{recipe.name | uppercase}}</h1>\\n     <span class=\\\"flex-spacer\\\"></span>\\n     <button mat-icon-button *ngIf=\\\"delete\\\" (click)=\\\"deleteFavorite(recipe._id)\\\">\\n       <span style=\\\"color: red;\\\" class=\\\"fa fa-times fa-lg\\\"></span>\\n     </button>\\n   </mat-grid-tile-footer>\\n </mat-grid-tile>\\n</mat-grid-list>\\n</div>\\n<div *ngIf=\\\"errMess\\\">\\n<h2>Error</h2>\\n<h4>{{errMess}}</h4>\\n</div>\\n</div>\\n<ng-template #loading>\\n  <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n</ng-template>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zhdm9yaXRlcy9mYXZvcml0ZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Favorite } from '../shared/favorite';\nimport { FavoriteService } from '../services/favorite.service';\nimport { flyInOut, expand } from '../animations/app.animation';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss'],\n  // tslint:disable-next-line:use-host-property-decorator\n  host: {\n    '[@flyInOut]': 'true',\n    'style': 'display: block;'\n  },\n  animations: [\n    flyInOut(),\n    expand()\n  ]\n})\nexport class FavoritesComponent implements OnInit {\n\n  favorites: Favorite;\n  delete: boolean;\n  errMess: string;\n\n  constructor(private favoriteService: FavoriteService,\n    @Inject('baseURL') private baseURL) { }\n\n  ngOnInit() {\n    this.favoriteService.getFavorites()\n      .subscribe(favorites => this.favorites = favorites,\n        errmess => this.errMess = <any>errmess);\n  }\n\n  deleteFavorite(id: string) {\n    console.log('Deleting Recipeh ' + id);\n    this.favoriteService.deleteFavorite(id)\n      .subscribe(favorites => this.favorites = <Favorite>favorites,\n        errmess => this.errMess = <any>errmess);\n    this.delete = false;\n  }\n\n}\n","module.exports = \"<div class=\\\"container footer\\\"\\n    fxLayout=\\\"row wrap\\\"\\n    fxLayout.lt-md=\\\"column\\\"\\n    fxLayoutAlign=\\\"center center\\\"\\n    fxLayoutGap=\\\"10px\\\">\\n\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n        <div fxLayout=\\\"row\\\">       \\n            <ul>\\n                <li routerLink=\\\"/home\\\"><a mat-button><span class=\\\"fa fa-home fa-lg\\\"></span> Home</a></li>\\n                <li routerLink=\\\"/recipe\\\"><a mat-button><span class=\\\"fa fa-list fa-lg\\\"></span> Recipe</a></li>\\n                 <li routerLink=\\\"/recipe\\\"><a mat-button><span class=\\\"fa fa-home fa-lg\\\"></span> Stores</a></li>\\n                <li routerLink=\\\"/aboutus\\\"><a mat-button><span class=\\\"fa fa-info fa-lg\\\"></span> About</a></li>\\n            </ul>\\n        </div>\\n    </div>\\n\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"45\\\">\\n        <div style=\\\"text-align:center\\\">\\n          <a mat-icon-button class=\\\"btn-twitter\\\" href=\\\"http://twitter.com/\\\"><i class=\\\"fa fa-twitter fa-lg\\\"></i></a>\\n          <a mat-icon-button class=\\\"btn-instagram\\\" href=\\\"http://instagram.com/\\\"><i class=\\\"fa fa-instagram fa-lg\\\"></i></a>\\n          <a mat-icon-button class=\\\"btn-mail\\\" href=\\\"mailto:\\\"><i class=\\\"fa fa-envelope-o fa-lg\\\"></i></a>\\n        </div>\\n    </div>\\n\\n    <div>\\n        <p>© Copyright LVdesign</p>\\n    </div>\\n</div>\\n\"","module.exports = \"ul li {\\n  display: inline; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sYXVyZW50dmlnbmF1eC9Eb2N1bWVudHMvYml0YnV0VmVnYW4vTmV3UmVjaXBlQW5ndWxhci9zcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBTyxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidWwgbGl7IGRpc3BsYXk6IGlubGluZTt9Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<mat-toolbar color=\\\"primary\\\">\\n  <span><img src=\\\"/assets/images/iconvegan.png\\\" class=\\\"imgLogo\\\"></span>\\n  <a mat-button routerLink='/home' routerLinkActive='active'><span class=\\\"fa fa-home fa-lg\\\"></span> Home</a>\\n\\n  <a mat-button routerLink='/recipe' routerLinkActive='active'><span class=\\\"fa fa-list fa-lg\\\"></span> Recipe</a>\\n  <a mat-button routerLink='/recipestore' routerLinkActive='active'><span class=\\\"fa fa-home fa-lg\\\"></span> Stores</a>\\n  <a mat-button routerLink='/instag' routerLinkActive='active'><span class=\\\"fa fa-instagram fa-lg\\\"></span> Insta Mood</a>\\n\\n  <a mat-button routerLink='/admin' routerLinkActive='active'><span class=\\\"fa fa-user fa-lg\\\"></span> Admin</a>\\n  <span class=\\\"flex-spacer\\\"></span>\\n  <a mat-button (click)=\\\"openLoginForm()\\\"><span class=\\\"fa fa-sign-in fa-lg\\\"></span> Login</a>\\n</mat-toolbar>\\n\\n\"","module.exports = \".imgLogo {\\n  width: 80%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sYXVyZW50dmlnbmF1eC9Eb2N1bWVudHMvYml0YnV0VmVnYW4vTmV3UmVjaXBlQW5ndWxhci9zcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltZ0xvZ297XG4gICAgd2lkdGg6ODAlO1xufVxuIl19 */\"","import { Component, OnInit} from '@angular/core';\nimport { LoginComponent} from '../login/login.component';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n\n  constructor(\n    public dialog: MatDialog\n  ) { }\n\n\n  ngOnInit() {\n  }\n\n  openLoginForm() {\n    this.dialog.open( LoginComponent, {width: '500px', height: '450px'});\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\"\\n     fxLayout=\\\"row\\\"\\n     fxLayout.sm=\\\"column\\\"\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign.gt-md=\\\"space-around center\\\"\\n     fxLayoutGap=\\\"10px\\\">\\n\\n<mat-card *ngIf=\\\"recipe\\\" fxFlex>\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>\\n      <h3>{{recipe.title | uppercase}}</h3>\\n      <p>{{recipe.author}} <span>{{recipe.date | date }}</span></p>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"{{BaseURL + recipe.image}}\\\" alt={{recipe.title}}>\\n  <mat-card-content>\\n    <p>{{recipe.summary}}</p>\\n  </mat-card-content>\\n</mat-card>\\n<div fxFlex [hidden]=\\\"recipe || recipeErrMess\\\">\\n  <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n</div>\\n<div fxFlex *ngIf=\\\"recipeErrMess\\\">\\n  <h2>Error Recipe</h2>\\n  <h4>{{recipeErrMess}}</h4>\\n</div>\\n\\n\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { Recipe } from '../shared/recipe';\nimport { RecipeService } from '../services/recipe.service';\nimport { baseURL } from '../shared/baseurl';\n\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  //\n  recipe: Recipe;\n  recipeErrMess: string;\n\n\n\n\n  constructor(\n      private recipeservice: RecipeService\n      , @Inject('BaseURL') private BaseURL\n  ) { }\n\n  ngOnInit() {\n    this.recipeservice.getFeaturedRecipe()\n      .subscribe( recipe => this.recipe = recipe,\n        errmess => this.recipeErrMess = errmess as any );\n\n\n  }\n\n}\n","module.exports = \"<p>\\n  instag works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luc3RhZy9pbnN0YWcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instag',\n  templateUrl: './instag.component.html',\n  styleUrls: ['./instag.component.scss']\n})\nexport class InstagComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    Login\\n  <span class=\\\"flex-spacer\\\"></span>\\n  <button mat-button mat-dialog-close>&times;</button>\\n</mat-toolbar>\\n\\n<p>{{ user | json }}</p>\\n\\n<div *ngIf=\\\"errMess\\\">\\n  <h2>Error</h2>\\n  <h4>{{errMess}}</h4>\\n</div>\\n\\n\\n<form novalidate  #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <mat-dialog-content>\\n    <p>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Username\\\" type=\\\"text\\\" name=\\\"username\\\"\\n        [(ngModel)]=\\\"user.username\\\" #username=\\\"ngModel\\\" required>\\n        <mat-error *ngIf=\\\"username.errors?.required\\\">Username is required</mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\"\\n        [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" required>\\n        <mat-error *ngIf=\\\"password.errors?.required\\\">Password is required</mat-error>\\n      </mat-form-field>\\n\\n      <mat-checkbox  name=\\\"remember\\\"   [(ngModel)]=\\\"user.remember\\\" >Remember Me\\n      </mat-checkbox>\\n    </p>\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>Cancel</button>\\n    <button mat-button class=\\\"background-primary text-floral-white\\\" type=\\\"submit\\\"\\n    [disabled]=\\\"loginForm.form.invalid\\\" >Login</button>\\n  </mat-dialog-actions>\\n\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user = { username:'', password:'', remember: false };\n  errMess: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<LoginComponent>,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // action form login\n  onSubmit(){\n    console.log('User: ', this.user);\n\n    this.authService.logIn(this.user)\n      .subscribe(res => {\n        if (res.success) {\n          this.dialogRef.close(res.success);\n        } else {\n          console.log(res);\n        }\n      },\n      error => {\n        console.log(error);\n        this.errMess = error;\n      });\n\n}\n\n}\n","module.exports = \"<div class=\\\"container\\\"\\n     fxLayout=\\\"column\\\"\\n     fxLayoutGap=\\\"10px\\\">\\n\\n     <div fxFlex>\\n       <div>\\n         <h3>Recipe</h3>\\n         <hr>\\n       </div>\\n     </div>\\n\\n    <div fxFlex  *ngIf=\\\"recipes\\\">\\n\\n<div fxLayout=\\\"row wrap\\\"  fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"2%\\\" fxLayoutAlign=\\\"left\\\">\\n\\n  <mat-card class=\\\"card-picture\\\" *ngFor=\\\"let recipe of recipes\\\" [routerLink]= \\\"['/recipedetail', recipe._id]\\\" appHighlight>\\n\\n      <img height=\\\"200px\\\" src=\\\"{{BaseURL + recipe.image}}\\\" alt={{recipe.title}}>\\n      \\n      <h1 matLine> {{ recipe.title | uppercase }} </h1>\\n      <p>{{ recipe.category}}</p>\\n\\n</mat-card>\\n</div>\\n\\n    </div>\\n\\n        <div fxFlex [hidden]=\\\"recipes || errMess\\\">\\n          <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n        </div>\\n\\n        <div fxFlex *ngIf=\\\"errMess\\\">\\n          <h2>Error</h2>\\n          <h4>{{errMess}}</h4>\\n        </div>\\n\\n\\n\\n\\n\\n\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZS9yZWNpcGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { Recipe } from '../shared/recipe';\nimport { RecipeService } from '../services/recipe.service';\n\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.scss']\n})\nexport class RecipeComponent implements OnInit {\n\n  recipes: Recipe[];\n  errMess: string;\n\n  constructor(\n      private recipeService: RecipeService\n    , @Inject('BaseURL') private BaseURL\n  ) { }\n\n  ngOnInit() {\n    this.recipeService.getRecipes()\n      .subscribe( recipes => this.recipes = recipes,\n                errmess => this.errMess = errmess as any );\n  }\n\n\n\n}\n","module.exports = \"  <div class=\\\"container\\\"\\n  fxLayout=\\\"row\\\"\\n  fxLayout.sm=\\\"column\\\"\\n  fxLayout.xs=\\\"column\\\"\\n  fxLayoutAlign.gt-md=\\\"space-around center\\\"\\n  fxLayoutGap=\\\"10px\\\"\\n  fxLayoutGap.xs=\\\"0\\\">\\n\\n    <div fxFlex=\\\"40\\\" *ngIf=\\\"recipe\\\">\\n          <mat-card>\\n\\n            <mat-card-header>\\n            <p>{{recipe.category}}</p>\\n                <mat-card-title>\\n                  <h3>{{recipe.title | uppercase}} </h3>\\n                </mat-card-title>\\n             <p>{{recipe.author}},  {{ recipe.date | date }}</p>\\n            </mat-card-header>\\n\\n            <img mat-card-image src=\\\"{{BaseURL + recipe.image}}\\\" alt={{recipe.title}} />\\n\\n            <mat-card-content>\\n            <p>{{recipe.summary}}</p>\\n            <p>{{recipe.preparationTime}} .mn</p> <p>{{recipe.cookingTime}} .mn</p>\\n            <p>{{recipe.ingredients}}</p>\\n              <p>{{recipe.method}}</p>\\n              <p>{{recipe.tips}}</p>\\n            </mat-card-content>\\n\\n            <mat-card-actions>\\n              <button mat-button [routerLink]=\\\"['/recipedetail', prev]\\\">\\n                  <span class=\\\"fa fa-chevron-left fa-lg\\\"></span>\\n              </button>\\n                  <button mat-button (click)=\\\"goBack()\\\">Back</button>\\n                  <button mat-button>LIKE</button>\\n                  <button mat-button>SHARE</button>\\n                  <span class=\\\"flex-spacer\\\"></span>\\n              <button mat-button [routerLink]=\\\"['/recipedetail', next]\\\">\\n                <span class=\\\"fa fa-chevron-right fa-lg\\\"></span>\\n              </button>\\n            </mat-card-actions>\\n          </mat-card>\\n    </div>\\n\\n    <div fxFlex=\\\"40\\\"  *ngIf=\\\"recipe\\\">\\n\\n      <mat-list class=\\\"comment-recipe\\\">\\n          <h2>Comments </h2>\\n        <mat-list-item *ngFor=\\\"let comment of recipe.comments\\\">\\n          <p  matLine >{{ comment.rating}} Star</p>\\n          <p  matLine >{{ comment.comment }}</p>\\n          <p  matLine >-- {{ comment.author }},  <span>{{ comment.date | date }}</span></p>\\n        </mat-list-item>\\n      </mat-list>\\n\\n\\n      <mat-list-item *ngIf=\\\"!(commentForm.invalid)\\\">\\n          <p matLine>\\n            <span>{{commentForm.value.comment}}</span>\\n          </p>\\n          <p matLine>\\n            <span>{{commentForm.value.rating}} Stars</span>\\n          </p>\\n          <p matLine>\\n            <span>-- {{commentForm.value.author}}</span>\\n          </p>\\n    </mat-list-item>\\n\\n\\n\\n      <form novalidate class=\\\"form-recipe\\\" [formGroup]=\\\"commentForm\\\" #cform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n       <p>\\n          <mat-form-field class=\\\"half-width\\\">\\n              <input matInput formControlName=\\\"author\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" required>\\n              <mat-error *ngIf=\\\"formErrors.author\\\">{{formErrors.author}}</mat-error>\\n            </mat-form-field>\\n       </p>\\n        <p>\\n            <mat-slider thumbLabel tickInterval='1' min='0' max='5' formControlName='rating'></mat-slider>\\n        </p>\\n       <p>\\n          <mat-form-field class=\\\"half-width\\\">\\n            <textarea matInput formControlName=\\\"comment\\\" placeholder=\\\"Your Comment\\\" rows=6 required></textarea>\\n            <mat-error *ngIf=\\\"formErrors.comment\\\">{{formErrors.comment}}</mat-error>\\n          </mat-form-field>\\n        </p>\\n\\n          <button type=\\\"submit\\\" mat-button class=\\\"background-primary text-floral-white\\\"\\n          [disabled]=\\\"commentForm.invalid\\\">Submit</button>\\n      </form>\\n\\n    </div>\\n\\n    <div fxFlex [hidden]=\\\"recipe || errMess\\\">\\n      <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n    </div>\\n\\n    <div fxFlex *ngIf=\\\"errMess\\\">\\n      <h2>Error</h2>\\n      <h4>{{errMess}}</h4>\\n    </div>\\n\\n</div>\\n\\n\\n<!--\\nrating: 4,\\ncomment: 'Sends anyone to heaven, I wish I could get my mother-in-law to eat it!',\\nauthor: 'Paul McVites',\\ndate: '2014-09-05T17:57:28.556094Z'\\n-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZWRldGFpbC9yZWNpcGVkZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Recipe } from '../shared/recipe';\nimport { Comment} from '../shared/comment';\n\nimport { RecipeService} from '../services/recipe.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-recipedetail',\n  templateUrl: './recipedetail.component.html',\n  styleUrls: ['./recipedetail.component.scss']\n})\n\n\nexport class RecipedetailComponent implements OnInit {\n\n  recipe: Recipe;\n  recipeCopy: Recipe;\n\n  recipeIds: string[];\n  prev: string;\n  next: string;\n\n  errMess: string;\n\n  // form comment\n  @ViewChild('cform') commentFormDirective;\n\n  commentForm: FormGroup;\n  comment: Comment;\n\n  formErrors = {\n    author: '',\n    comment: '',\n    };\n\n  validationMessages = {\n      author: {\n        required: 'Author Name is required.',\n        minlength: 'Author Name must be at least 2 characters long.',\n      },\n      comment: {\n        required: 'Comment is required.',\n        },\n   };\n\n  constructor(\n      private recipeService: RecipeService\n    , private route: ActivatedRoute\n    , private location: Location\n    , private fb: FormBuilder\n    , @Inject('BaseURL') private BaseURL\n  )\n  {  this.createForm(); }\n\n\n  ngOnInit() {\n     // dishdetail/0\n     this.recipeService.getRecipeIds().subscribe(recipeIds => this.recipeIds = recipeIds);\n     // avec Observable recuper le dish id   params['id']\n     this.route.params\n       .pipe(switchMap( (params: Params) => this.recipeService.getRecipe(params['id']) ) )\n         .subscribe( recipe => { this.recipe = recipe; this.recipeCopy = recipe; this.setPrevNext(recipe._id); },\n               errmess => this.errMess = errmess as any );\n  }\n\n  setPrevNext(recipeId: string) { // [ 0,1,2,3] -> 4\n    const index = this.recipeIds.indexOf(recipeId); // index ==  2\n    this.prev = this.recipeIds[(this.recipeIds.length + index - 1) % this.recipeIds.length]; // 4 + 2 -1 = 5 % 4  => 1\n    this.next = this.recipeIds[(this.recipeIds.length + index + 1) % this.recipeIds.length]; // 4 + 2 +1 = 7 % 4  => 3\n  }\n  goBack(): void {\n    this.location.back();\n  }\n\n  // form Comment\n      createForm() {\n        //\n        this.commentForm = this.fb.group({\n          author: ['', [Validators.required, Validators.minLength(2)] ],\n          rating: '',\n          comment: ['', Validators.required],\n        });\n\n        this.commentForm.valueChanges\n          .subscribe(data => this.onValueChanged(data));\n        this.onValueChanged();\n      }\n      // controle validation form\n      onValueChanged(data?: any) {\n        if (!this.commentForm) { return; }\n        const form = this.commentForm;\n    // general\n        for (const field in this.formErrors) {\n          if (this.formErrors.hasOwnProperty(field)) {\n            // clear previous error message (if any)\n            this.formErrors[field] = '';\n            const control = form.get(field);\n            if (control && control.dirty && !control.valid) {\n              const messages = this.validationMessages[field];\n              for (const key in control.errors) {\n                if (control.errors.hasOwnProperty(key)) {\n                  this.formErrors[field] += messages[key] + ' ';\n                }\n              }\n            }\n          }\n        }\n      }\n\n      //\n      onSubmit() {\n        this.comment = this.commentForm.value;\n        this.comment.date = new Date().toISOString();\n        console.log(this.comment);\n        // add comment si existe ou pas\n        this.recipeCopy.comments.push(this.comment); // car Post sur server une copy\n        this.recipeService.putRecipe(this.recipeCopy)\n        .subscribe (recipe => { this.recipe = recipe, this.recipeCopy = recipe; },\n            errmess => { this.recipe = null; this.recipeCopy = null; this.errMess = errmess as any; });\n        this.commentFormDirective.resetForm();\n        this.commentForm.reset({\n          author: '',\n          rating: 0,\n          comment: ''\n        });\n}\n\n\n}\n","module.exports = \"<p>\\n  recipestore works!\\n</p>\\n\\n<h1>{{ title }}</h1>\\n\\n<!-- this creates a google map on the page with the given lat/lng from -->\\n<!-- the component as the initial center of the map: -->\\n<agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\n  <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n</agm-map>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXN0b3JlL3JlY2lwZXN0b3JlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipestore',\n  templateUrl: './recipestore.component.html',\n  styleUrls: ['./recipestore.component.scss']\n})\nexport class RecipestoreComponent implements OnInit {\n  \n\n  // https://angular-maps.com/guides/getting-started/\n\n  \n  title = 'My first AGM project';\n  lat = 51.678418;\n  lng = 7.809007;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(public auth: AuthService, public router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigate(['home']);\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private inj: Injector) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authService = this.inj.get(AuthService);\n    // Get the auth header from the service.\n    const authToken = authService.getToken();\n    // console.log(\"Interceptor: \" + authToken);\n    // Clone the request to add the new header.\n    const authReq = req.clone({headers: req.headers.set('Authorization', 'bearer ' + authToken)});\n\n        // Pass on the cloned request instead of the original request.\n    return next.handle(authReq);\n  }\n}\n\n@Injectable()\nexport class UnauthorizedInterceptor implements HttpInterceptor {\n  constructor(private inj: Injector) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authService = this.inj.get(AuthService);\n    const authToken = authService.getToken();\n\n    return next\n      .handle(req)\n      .pipe(tap((event: HttpEvent<any>) => {\n        // do nothing\n      }, (err: any) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401 && authToken) {\n            console.log('Unauthorized Interceptor: ', err);\n            authService.checkJWTtoken();\n          }\n        }\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\ninterface AuthResponse {\n  status: string;\n  success: string;\n  token: string;\n}\n\ninterface JWTResponse {\n  status: string;\n  success: string;\n  user: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  tokenKey = 'JWT';\n  // tslint:disable-next-line:ban-types\n  isAuthenticated: Boolean = false;\n  username: Subject<string> = new Subject<string>();\n  authToken: string = undefined;\n\n   constructor(\n       private http: HttpClient\n     , private processHTTPMsgService: ProcessHTTPMsgService ) {\n   }\n\n   checkJWTtoken() {\n     this.http.get<JWTResponse>(baseURL + 'users/checkJWTtoken')\n     .subscribe(res => {\n       console.log('JWT Token Valid: ', res);\n       this.sendUsername(res.user.username);\n     },\n     err => {\n       console.log('JWT Token invalid: ', err);\n       this.destroyUserCredentials();\n     });\n   }\n\n   sendUsername(name: string) {\n     this.username.next(name);\n   }\n\n   clearUsername() {\n     this.username.next(undefined);\n   }\n\n   loadUserCredentials() {\n     const credentials = JSON.parse(localStorage.getItem(this.tokenKey));\n     console.log('loadUserCredentials ', credentials);\n     if (credentials && credentials.username !== undefined) {\n       this.useCredentials(credentials);\n       if (this.authToken) {\n        this.checkJWTtoken();\n       }\n     }\n   }\n\n   storeUserCredentials(credentials: any) {\n     console.log('storeUserCredentials ', credentials);\n     localStorage.setItem(this.tokenKey, JSON.stringify(credentials));\n     this.useCredentials(credentials);\n   }\n\n   useCredentials(credentials: any) {\n     this.isAuthenticated = true;\n     this.sendUsername(credentials.username);\n     this.authToken = credentials.token;\n   }\n\n   destroyUserCredentials() {\n     this.authToken = undefined;\n     this.clearUsername();\n     this.isAuthenticated = false;\n     localStorage.removeItem(this.tokenKey);\n   }\n\n   signUp() {\n\n   }\n\n   logIn(user: any): Observable<any> {\n     return this.http.post<AuthResponse>(baseURL + 'users/login',\n       {username: user.username, password: user.password})\n       .pipe( map(res => {\n           this.storeUserCredentials({username: user.username, token: res.token});\n           return {success: true, username: user.username };\n       }),\n        catchError(error => this.processHTTPMsgService.handleError(error)));\n   }\n\n   logOut() {\n     this.destroyUserCredentials();\n   }\n\n   // tslint:disable-next-line:ban-types\n   isLoggedIn(): Boolean {\n     return this.isAuthenticated;\n   }\n\n   getUsername(): Observable<string> {\n     return this.username.asObservable();\n   }\n\n   getToken(): string {\n     return this.authToken;\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Favorite } from '../shared/favorite';\nimport { FavoriteExists } from '../shared/favoriteExists';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavoriteService {\n\n  constructor(private http: HttpClient,\n    public auth: AuthService,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n\n  getFavorites(): Observable<Favorite> {\n    if (!this.auth.isLoggedIn()) {\n      return null;\n    }\n    return this.http.get<Favorite>(baseURL + 'favorites')\n      .pipe(catchError(error => this.processHTTPMsgService.handleError(error)));\n  }\n\n  postFavorites(recipeids: any) {\n    return this.http.post(baseURL + 'favorites/', recipeids)\n    .pipe(catchError(error => this.processHTTPMsgService.handleError(error)));\n  }\n\n  isFavorite(id: string): Observable<FavoriteExists> {\n    if (!this.auth.isLoggedIn()) {\n      return of({ exists: false, favorites: null });\n    }\n    return this.http.get<FavoriteExists>(baseURL + 'favorites/' + id)\n    .pipe(catchError(error => this.processHTTPMsgService.handleError(error)));\n  }\n\n  postFavorite(id: string) {\n    return this.http.post(baseURL + 'favorites/' + id, {})\n    .pipe(catchError(error => this.processHTTPMsgService.handleError(error)));\n  }\n\n  deleteFavorite(id: string) {\n    return this.http.delete(baseURL + 'favorites/' + id)\n    .pipe(catchError(error => this.processHTTPMsgService.handleError(error)));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// Observable\nimport { Observable, of } from 'rxjs';\nimport { delay , map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\nimport { Feedback } from '../shared/feedback';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(\n      private http: HttpClient\n    , private processHTTPMsgService: ProcessHTTPMsgService\n  ) { }\n\n\n  getFeedbacks(): Observable <Feedback[]> {\n    return this.http.get<Feedback[]>( baseURL + 'feedback')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n\n  }\n  // post Feedback\n  addFeedback(feedback: Feedback): Observable<Feedback> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        })\n  };\n    return this.http.post<Feedback>( baseURL + 'feedback/', feedback, httpOptions)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessHTTPMsgService {\n\n  constructor() { }\n\n\n  public handleError(error: HttpErrorResponse | any) {\n    let errMsg: string;\n\n    if (error.error instanceof ErrorEvent) {\n      errMsg = error.error.message;\n    } else {\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\n    }\n\n    return throwError(errMsg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay, map, catchError , tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\nimport { Recipe } from '../shared/recipe';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class RecipeService {\n\n  constructor(\n      private http: HttpClient\n    , private processHTTPMsgService: ProcessHTTPMsgService\n  ) { }\n\n// all dishes\ngetRecipes(): Observable<Recipe[]> {\n  return this.http.get<Recipe[]>(baseURL + 'recipes')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\n//  get ID string ???\ngetRecipe(id: string): Observable<Recipe> {\n  return this.http.get<Recipe>(baseURL + 'recipes/' + id)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\n// get query specifique featured\ngetFeaturedRecipe(): Observable<Recipe> {\n  return this.http.get<Recipe>(baseURL + 'recipes?featured=true')\n    .pipe(map(recipes => recipes[0]))\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\ngetRecipeIds(): Observable<string[] | any> {\n  return this.getRecipes()\n  .pipe(map(recipes => recipes.map( recipe => recipe._id) ) )\n    .pipe(catchError(error => error));\n}\n\n// return map of dish id\n\n// POST method\nputRecipe(recipe: Recipe): Observable<Recipe> {\n  const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        })\n  };\n\n  return this.http.put<Recipe>(baseURL + 'recipes/' + recipe._id, recipe, httpOptions)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\n//\naddRecipe(recipe: Recipe): Observable<Recipe> {\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      })\n};\n  return this.http.post<Recipe>( baseURL + 'recipes', recipe, httpOptions)\n  .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\n\ndeleteRecipe( id: string): Observable <{}> {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n          })\n    };\n      const url = `${baseURL}recipes/${id}`;\n      return this.http.delete(url, httpOptions)\n        .pipe(\n          tap (_ => console.log(`deleted recipe id=${id}`)),\n          catchError(this.processHTTPMsgService.handleError)\n          );\n}\n\n\n\n\n}// endC\n","//export const baseURL = 'http://localhost:3000/';\nexport const baseURL = 'https://localhost:3443/';\n","export class Feedback {\n  firstname: string;\n  lastname: string;\n  telnum: number;\n  email: string;\n  agree: boolean;\n  contacttype: string;\n  message: string;\n\n};\n\nexport const ContactType = ['None', 'Tel', 'Email'];\n","import { Comment } from './comment';\n\nexport class Recipe {\n    _id: string; // _id string with Mongo\n    author: string; // USER\n    title: string;\n    image: string;\n    category: string;\n    summary: string;\n    method: string;\n    ingredients: string;\n    preparationTime: string;\n    cookingTime: string;\n    tips: string;\n    featured: boolean;\n    date: string;\n    comments: Comment[];\n}\n\n// categories\nexport const Categories = ['appetizer', 'mains', 'dessert', 'drinks', 'none'];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}